"""
Django settings for alge project.

Generated by 'django-admin startproject' using Django 1.9.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

#Load the config file. See config.py.sample for the structure
import string
import random

try:
    import alge.config as config
except ImportError as e:
    default_conf = """\
# Remember to set the correct permissions for this file when in production.
# This is done (in Linux) with the command:
# chown *web server user*:*your user group* config.py && chmod 660 config.py

DEBUG = True                # False in a production environment
SECRET_KEY = '{secret_key}'
EMAIL_USE_TLS = True
EMAIL_HOST = None           # smtp.gmail.com
EMAIL_HOST_USER = None      # strecklistan@gmail.com
EMAIL_HOST_PASSWORD = None  # Remember to set this
EMAIL_PORT = 587
""".format(secret_key=''.join(random.choice(string.ascii_letters + string.digits) for _ in range(50)))

    with open("alge/config.py", "a") as f:
        f.write(default_conf)

    import alge.config as config


def filter_non_strings(items):
    """Filters out non-strings from the given iterable, and returns a list."""
    return list(filter(lambda item: type(item) is str, items))

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config.SECRET_KEY

# SECURITY WARNING: don't run with debug turned on in production!


if 'DEBUG' in dir(config):
    DEBUG =  config.DEBUG
else:
    DEBUG = True

ALLOWED_HOSTS = ["localhost", "streque.se", "www.streque.se"]


# Application definition

INSTALLED_APPS = filter_non_strings([
    'strecklista.apps.StrecklistaConfig',
    DEBUG and 'livereload',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'widget_tweaks',
    'EmailUser',
    'ProtectedServe',
    'password_reset_email',
    'rest_framework',
    'api',
    'pwa',
    'imagekit',
    'django_extensions',
])

MIDDLEWARE = filter_non_strings([
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    DEBUG and 'livereload.middleware.LiveReloadScript',
])

ROOT_URLCONF = 'alge.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'alge.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Europe/Stockholm'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, "static/")

#Media root (uploaded files)

MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL = '/media/'

#Gmail stpm settings

EMAIL_USE_TLS = config.EMAIL_USE_TLS
EMAIL_HOST = config.EMAIL_HOST
EMAIL_HOST_USER = config.EMAIL_HOST_USER
EMAIL_HOST_PASSWORD = config.EMAIL_HOST_PASSWORD
EMAIL_PORT = config.EMAIL_PORT

#url to login page
LOGIN_URL = '/login'

#Custom user model:
AUTH_USER_MODEL = 'EmailUser.MyUser'

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',

    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    #Set page size so large numbers of data will be split up over multiple pages
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 50,
    'MAX_PAGE_SIZE' : 200,
}

# Imagekit
# Use the same directory as other user uploaded files.
IMAGEKIT_CACHEFILE_DIR = ""

# Progressive Web Application config
PWA_APP_NAME = 'Streque'
PWA_APP_THEME_COLOR = '#222'
PWA_APP_ICONS = [
    {
        'src': '/static/strecklista/images/icon-96.png',
        'type': 'image/png',
        'sizes': '96x96'
    },
    {
        'src': '/static/strecklista/images/icon-144.png',
        'type': 'image/png',
        'sizes': '144x144'
    },
    {
        'src': '/static/strecklista/images/icon-192.png',
        'type': 'image/png',
        'sizes': '192x192'
    }
]
